// This object is a very quick shortcut to running sequences while
// leveraging the priority system.
{
id: "level_seq_controller",

next_animation: "'normal'",
always_active: true,
is_strict: true,
hidden_in_game: true,
zorder: "@include data/zorder.cfg:in_front_of_everything",

// This is basically like the level_controller
properties: {
	"@derive": "@include data/objects/effects/control/level_controller.cfg:properties",
	
	sequence: { type: 'string',
				default: 'null',
				editor_info: { type: "string", value: "null" } },
	priority: { type: 'int',
				default: 0,
				editor_info: { type: "int", value: "0" } },
	
},

on_process: "[
	if(in_bounds(level.player.mid_xy)
		and cycle - _last_triggered > 250,
		[fire_event('triggered'), set(_last_triggered,cycle)] ),

	set(prev_mid_xy, level.player.mid_xy),
	if( in_bounds(level.player.mid_xy) and not in_bounds(prev_mid_xy),
		fire_event('enter') ),
	if( not in_bounds(level.player.mid_xy) and in_bounds(prev_mid_xy),
		fire_event('exit') )
]",

on_enter: "",
on_triggered: "",
on_exit: "",

editor_info: {
	category: "controllers",
},

animation: {
	id: "normal",
	image: "effects/particles.png",
	x: 86, y: 73, w: 28, h: 28,
	duration: -1,
},

} // end of file
