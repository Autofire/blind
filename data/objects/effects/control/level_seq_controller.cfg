// This object is a very quick shortcut to running sequences while
// leveraging the priority system.
{
id: "level_seq_controller",
prototype: ['standard_values'],

next_animation: "'normal'",
always_active: true,
is_strict: true,
hidden_in_game: true,
zorder: "@include data/zorder.cfg:in_front_of_everything",

// This is basically like the level_controller
properties: {
	"@derive": "@include data/objects/effects/control/level_controller.cfg:properties",
	
	sequence: { type: 'string',
				default: 'null',
				editor_info: { type: "string", value: "'null'" } },
	priority: { type: 'int',
				default: 0,
				editor_info: { type: "int", value: "0" } },
	clearDescOnExit:{type: 'bool', default: false,
					 editor_info: { type:  "boolean", value: "false" }
					},
	clearDialOnExit:{type: 'bool', default: false,
					 editor_info: { type:  "boolean", value: "false" }
					},
	clearChoicesOnExit:{type: 'bool', default: false,
						editor_info: { type:  "boolean", value: "false" }
					},
	
	useLevelSequence:{type: 'bool', default: true,
						editor_info: { type:  "boolean", value: "true" }
					},
	channel: {type: "string", default: 'desc',
		editor_info: {type: "enum", value: 'desc',
			enum_values: ["desc", "dial"]
		}
	},

	lp: "level.player",
},

on_process: "[
	if(in_bounds(level.player.mid_xy)
		and cycle - _last_triggered > triggerFreq,
		[fire_event('activation'), set(_last_triggered,cycle)] ),

	set(prev_mid_xy, level.player.mid_xy),
	if( in_bounds(lp.mid_xy) and not in_bounds(prev_mid_xy),
		fire_event('enter') ),
	if( not in_bounds(lp.mid_xy) and in_bounds(prev_mid_xy),
		fire_event('exit') )
]",

on_enter: "
	if(useLevelSequence,
		lp.NewPriority(priority, lp.StartSeq(sequence, channel)),
		lp.NewPriority(priority, lp.StartSeq(sequence, channel, 'general'))
	)
",

on_activation: "",

on_exit: "[
	if(clearDescOnExit, lp.StartSeq('Clear desc', 'desc', 'general') ),
	if(clearDialOnExit, lp.StartSeq('Clear dial', 'dial', 'general') ),
	if(clearChoicesOnExit, lp.DestroyChoices());
	set(lp.seq[channel].isBusy, false),
	lp.RemovePriority(priority)
]",
on_editor_changing_variable: "fire_event('exit')",

editor_info: {
	category: "controllers",
},

animation: {
	id: "normal",
	image: "effects/particles.png",
	x: 179, y: 104, w: 28, h: 28,
	duration: -1,
},

} // end of file
