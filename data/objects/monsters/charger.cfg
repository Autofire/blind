{
id:          "charger",
prototype:   ["hittable"],
editor_info: { category: "Monsters" },

solid_dimensions:   ["player","common"],
collide_dimensions: ["common"],
has_feet:           false,
zorder:             "@include data/zorder.cfg:npcs",
hitpoints:          60,

properties: {
	wanderBaseVelocity_: "decimal :: 150",
	windupBaseVelocity_: "decimal :: 100",
	chargeBaseVelocity_: "decimal :: 500",
	
	wanderVelocityXY_: "[decimal, decimal] ::
		[wanderBaseVelocity_ * cos(randAngle),
		 wanderBaseVelocity_ * sin(randAngle)]
			where randAngle = 1d360",
	
	wanderRefreshDelay_:   "int :: 50 + 5d5",
	chargeWindupDuration_: "int :: 75",
	
	TargetVelocityXY:     {type: '[decimal]', default: [0, 0]},

	/******
	 * AI *
	 ******/
	heardPlayer_: false,
	canAttack_:   false,
	isCharging:   {type: 'bool', default: false},

	Move: "def() -> commands
	[
		add(velocity_x, TargetVelocityXY[0]),
		add(velocity_y, TargetVelocityXY[1])
	]",

	PickAction: "def() -> commands
	
		// Do nothing while charging
		if(not isCharging,
		
			// If we know where player is, do a charge
			if(heardPlayer_ and canAttack_,
				BeginCharge(level.player.mid_xy),
				Wander()
			)
		)
	",

	BeginCharge: "def([int] targetXY) -> commands [
		set(isCharging, true),
		
		// Go away from the player a bit, as if winding up
		set(TargetVelocityXY,
			[windupBaseVelocity_ * cos(180 + targetAngle),
			 windupBaseVelocity_ * sin(180 + targetAngle)]
		),
		
		// Schedule the charge itself
		schedule(chargeWindupDuration_,
			set(TargetVelocityXY,
				[chargeBaseVelocity_ * cos(targetAngle),
				 chargeBaseVelocity_ * sin(targetAngle)]
			)
		)
	] where targetAngle =
			angle(me.mid_x, me.mid_y, level.player.mid_x, level.player.mid_y)
	",
	
	Wander: "def() -> commands
		if(Timer_HasExpired('WanderRefresh'),
			[
				Timer_Start('WanderRefresh', wanderRefreshDelay_),
				set(TargetVelocityXY, wanderVelocityXY_)
			]
		)
	",

}, // End of properties

on_process: "[
	PickAction();
	Move();
	DoFriction()
]",

animation: {
	id:    "normal",
	image: "blank.png",
	rect:  [0, 0, 23, 23],
	solid_area: [0, 0, 23, 23],
	body_area:  "all"
	
} // End of animation

} // End of file
