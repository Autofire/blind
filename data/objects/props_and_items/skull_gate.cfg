{
id: "skull_gate",
//solid_dimensions: ["player","common"],
//collide_dimensions: ["skull"],
always_active: true,
has_feet: false,

editor_info: {
	category: "props",
	help: "enemies: Number of enemies to let the player object know are in the level.
	  Setting this to 0 causes no amount to be set; optimal if you're just adding
	  another one. You only need to set this on a single skull gate.
	enemies_left_upon_dieing: Exactly what it says on the tin.
	enemies_despawn: Upon this object dieing, cause it so that no more enemies may
	  spawn on this level upon reentering it. Note that this doesn't stop the spawner
	  objects from spawning, though those don't respawn normally, anyway.",
},

properties: {
	team: "'evil'",
	modify_solid: "def(bool solidity) -> commands
		set_solid(midpoint_x-15, midpoint_y-15, midpoint_x+15, midpoint_y+15,solidity)",
	create_solid: "modify_solid(true)",	
	destroy_solid: "modify_solid(false)",

	enemies: {type: "int", default: 1,
		editor_info: {type: "int", value: "0", min_value: 0, max_value: 100}},
	enemies_left_upon_dieing: {type: "int", default: 0,
		editor_info: {type: "int", value: "0", min_value: 0, max_value: 100}},
	enemies_despawn: {type: "bool", default: false,
		editor_info: {type: "boolean", value: false}},		
	extra_tiles: {type: "int", default: 0,
		editor_info: {type: "int", value: "0", min_value: 0, max_value: 10}},
},

on_start_level: "if(level.player.get_stored_event(level.id) = 1,
	remove_object(self),
	if(enemies != 0, set(level.player.enemy_count, enemies)),
	 )",
on_done_create: "set_solid(midpoint_x-15, midpoint_y-15, midpoint_x+15, midpoint_y+15,true)",

//timer_frequency: 50,
//on_timer: "set_solid(midpoint_x-15, midpoint_y-15, midpoint_x+15, midpoint_y+15,true)",

on_editor_changed_variable: "set(level.player.enemy_count, enemies)",

on_process: "[if(level.player.enemy_count <= enemies_left_upon_dieing,
		[if(enemies_despawn, level.player.store_event(level.id, 1)),
		 destroy_solid,
		 set(alpha, 100),
		 schedule(50,die()) ],
		 if(not solid(level, midpoint_x,midpoint_y and level.player.hitpoints > 0),
		 	create_solid,
		 	if(level.player.hitpoints = 0, destroy_solid) )
		 ),
	 set(velocity_x, 0),
	 set(velocity_y, 0),
	 set(accel_x, 0),
	 set(accel_y, 0)]",

animation: {
	id: "normal",
	image: "props.png",
	rect: [104,2,119,17],
	frames: 1,
	duration: 1,
},
}
