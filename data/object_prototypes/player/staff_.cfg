{
id: "staff_",

properties: {

	/****************************************************************************
	 *   GenXYChain
	 *
	 * Given an angle, a "reach" (magnitude of a vector), and a number of points,
	 * this will create a set of evenly spaced points. These points are relative
	 * to the given XY origin.
	 *
	 * This function isn't bound to the staff system, but it is closely
	 * related.
	 ****************************************************************************/
	GenXYChain: "
		def(
			Point2d origin,
			decimal angle,
			int     magnitude,
			int     totalPoints
		) -> [Point2d]
		
		map(
			range(totalPoints),
			[radius__ * cos(angle) + origin[0],
			 radius__ * sin(angle) + origin[1]]
				where radius__ = magnitude * (value + 1.0) / totalPoints
		)
	",
	
	// Like solid(), but explicitly detects around a square
	SolidSquare: "def(Point2d targetXY, int size) -> bool
		bool(solid(
			level,
			int(targetXY[0]) - size/2,
			int(targetXY[1]) - size/2,
			size,
			size, 1
		))
	",
	
	SolidXYChain: "def([Point2d] chain, int size) -> [bool]
		map(chain, SolidSquare(value, size))
	",
	
}, // End of properties

} // End of file
