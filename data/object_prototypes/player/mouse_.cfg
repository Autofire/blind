{
id: "mouse_",

properties: {
	mouseX_: "int :: (int <- ctrl_mice[0][0]) - level.camera_position[2]/2",
    mouseY_: "int :: (int <- ctrl_mice[0][1]) - level.camera_position[3]/2",
    mouseXY_: "[int] :: [mouseX_, mouseY_]",

    mouseAngle_: "decimal ::
        switch(FindQuad(mouseX_, mouseY_),
            1, atan( mouseY_ / decimal(mouseX_) ),
            2, atan( mouseY_ / decimal(mouseX_) ) + 180,
            3, atan( mouseY_ / decimal(mouseX_) ) + 180,
               atan( mouseY_ / decimal(mouseX_) ) + 360
        )
    ",

    /************************************************
     * In Anura, the quadrents are:
     *   3|4
     *   -+-
     *   2|1
     *
     * Angles go from 1 to 2, and so on. Also, on an
     * axis, it will report the positive value
     * instead. This is to make it easier to work
     * with angles.
     ************************************************/
    FindQuad: "def(int|decimal x, int|decimal y) -> int
        if(y >= 0,
            // We are to the below of the x axis
            if(x >= 0,
                1,
                2
            ),

            // We are to the above of the x axis
            if(x >= 0,
                4,
                3
            )
        )
    ",

} // End of properties

} // End of file
